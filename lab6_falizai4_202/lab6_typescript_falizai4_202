Script started on 2024-03-17 13:50:55-04:00
bash-4.4$ -u[K[Kuname -a
Linux zeus-1.cec.gmu.edu 4.18.0-348.23.1.el8_5.x86_64 #1 SMP Tue Apr 12 11:20:32 EDT 2022 x86_64 x86_64 x86_64 GNU/Linux
bash-4.4$ ls
lab6_falizai4_202.c  lab6_typescript_falizai4_202  Makefile
bash-4.4$ cat fal[K[K[Klabt[K6_da[K[Kfalizai4_202.c
/* Faryal Alizai GG0136407
 * CS 262, Lab Section 202
 * Lab 6
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void InitArray(int *numArray, int arrayLength);
void ShuffleArray(int *numArray, int arrayLength);
int compare(const void *a, const void *b);
int getMemory(int **numArray, int N);

int main(int argc, char *argv[]) {
    if (argc != 3) {

        printf(" %s Enter <seed> <arraySize>\n", argv[0]);
        return 1;
    }

    int seed = atoi(argv[1]);
    srand(seed);

    int N = atoi(argv[2]);

    if (N < 2 || N > 500) {
        printf("Error: Array size must be between 2-500\n");
        return 1;
    }

    int *numArray;
    if (!getMemory(&numArray, N)) {
        printf("Failed to allocate memory.\n");
        return 1;
    }

    printf("Generating lists of %d numbers\n", N);

    for (int i = 0; i < 10; i++) {
        InitArray(numArray, N);

        printf("Starting array: ");
        for (int j = 0; j < N; j++) printf("%d ", numArray[j]);
        printf("\n");

        ShuffleArray(numArray, N);

        printf("Mixed array: ");
        for (int j = 0; j < N; j++) printf("%d ", numArray[j]);
        printf("\n");

        qsort(numArray, N, sizeof(int), compare);

        printf("Sorted arrays in descending order: ");
        for (int j = 0; j < N; j++) printf("%d ", numArray[j]);
        printf("\n");
    }

    free(numArray);

    return 0;
}

int getMemory(int **numArray, int N) {
    *numArray = malloc(sizeof(int) * N);
    if (*numArray == NULL) {
        printf("Error allocating memory!\n");
        return 0;
    }
    return 1;
}

void InitArray(int *numArray, int arrayLength) {
    for (int i = 0; i < arrayLength; i++) numArray[i] = i + 1;
}

void ShuffleArray(int *numArray, int arrayLength) {
    for (int i = arrayLength - 1; i > 0; i--) {
        int j = rand() % (i + 1);
        int temp = numArray[i];
        numArray[i] = numArray[j];
        numArray[j] = temp;
    }
}

int compare(const void *a, const void *b) {
    int numA = *((int*)a);
    int numB = *((int*)b);

    if (numA < numB) return 1;
    else if (numA > numB) return -1;
    else return 0;
}
bash-4.4$ cat make[K[K[K[KMakf[Kefile
#Faryal Alizai G01364057
#CS 262, Lab Section 202
#Lab 6

CC = gcc
CFLAGS = -g -Wall -std=c99 -pedantic-errors
LIBS = -lm
TARGET = lab6_falizai4_202

$(TARGET) : $(TARGET).c
	$(CC) $(TARGET).c -o $(TARGET) $(CFLAGS) $(LIBS)
clean:
	rm $(TARGET)
bash-4.4$ make
gcc lab6_falizai4_202.c -o lab6_falizai4_202 -g -Wall -std=c99 -pedantic-errors -lm
bash-4.4$ ls
lab6_falizai4_202  lab6_falizai4_202.c	lab6_typescript_falizai4_202  Makefile
bash-4.4$ ./lab6_falizai4[K4_202 500 10
Generating lists of 10 numbers
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 7 8 10 5 6 4 3 2 1 9 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 6 9 4 3 2 5 7 10 8 1 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 4 10 9 5 6 1 3 2 7 8 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 5 7 2 8 6 3 4 1 9 10 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 9 7 3 5 1 6 8 4 10 2 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 9 7 5 4 6 2 8 1 10 3 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 1 6 4 3 2 8 9 7 5 10 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 1 5 3 6 2 7 4 8 10 9 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 7 8 10 6 3 2 5 9 4 1 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
Starting array: 1 2 3 4 5 6 7 8 9 10 
Mixed array: 5 4 7 2 1 8 6 9 3 10 
Sorted arrays in descending order: 10 9 8 7 6 5 4 3 2 1 
bash-4.4$ cle[K[K[Kmake clean
rm lab6_falizai4_202
bash-4.4$ ls
lab6_falizai4_202.c  lab6_typescript_falizai4_202  Makefile
bash-4.4$ exit
exit

Script done on 2024-03-17 13:51:57-04:00
